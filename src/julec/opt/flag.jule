// Copyright 2024-2025 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

// JuleC optimization levels.
enum OptLevel {
	// No optimization.
	L0,

	// Passed flags:
	//	Copy, Deadcode, Append, Math, Access, Inline, Ptr, Array,
	//	Cond, Str, Slice, Assign, Exceptional, Iter, Dynamic, Len
	L1,

	// Passed flags:
	//	All flags of the L0, L1 and additionally:
	//		StdStrings, StdMathCmplx
	L2,
}

static mut Copy = false
static mut Deadcode = false
static mut Append = false
static mut Math = false
static mut Access = false
static mut Inline = false
static mut Ptr = false
static mut Cond = false
static mut Str = false
static mut Slice = false
static mut Assign = false
static mut Exceptional = false
static mut Iter = false
static mut Dynamic = false
static mut Array = false
static mut Len = false
static mut StdStrings = false
static mut StdMathCmplx = false

// Pushes optimization flags related with optimization level.
fn PushOptLevel(level: OptLevel) {
	l1 := level >= OptLevel.L1
	l2 := level >= OptLevel.L2

	Copy = l1
	Deadcode = l1
	Append = l1
	Math = l1
	Access = l1
	Inline = l1
	Ptr = l1
	Cond = l1
	Str = l1
	Slice = l1
	Assign = l1
	Exceptional = l1
	Iter = l1
	Dynamic = l1
	Array = l1
	Len = l1

	StdStrings = l2
	StdMathCmplx = l2
}