// Copyright 2025 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use "std/jule/sema"

// Reports whether the expression e is optimizable array for the built-in copy function.
fn IsZCopyArray(e: sema::Expr): bool {
	match type e {
	| &sema::SlicingExpr:
		mut ie := (&sema::SlicingExpr)(e)
		ret ie.Expr.Type.Array() != nil
	}
	ret false
}

// Reports whether the expression e is optimizable array for the built-in append function.
fn IsZAppendArray(e: sema::Expr): bool {
	match type e {
	| &sema::SlicingExpr:
		mut ie := (&sema::SlicingExpr)(e)
		ret ie.Expr.Type.Array() != nil
	}
	ret false
}