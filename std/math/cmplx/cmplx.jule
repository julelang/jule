// Copyright 2023-2025 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use "std/math"

// Returns conjugate of complex number.
fn Conj(x: cmplx128): cmplx128 {
	ret cmplx(real(x), -imag(x))
}

// Reports whether either real or imag is an infinity.
fn IsInf(x: cmplx128): bool {
	ret math::IsInf(real(x), 0) || math::IsInf(imag(x), 0)
}

// Reports whether either real or imag is NaN and neither is an infinity.
fn IsNaN(x: cmplx128): bool {
	match {
	| math::IsInf(real(x), 0) | math::IsInf(imag(x), 0):
		ret false
	| math::IsNaN(real(x)) | math::IsNaN(imag(x)):
		ret true
	|:
		ret false
	}
}

// Returns NaN complex number.
fn NaN(): cmplx128 {
	ret cmplx(math::NaN(), math::NaN())
}

// Returns Inf complex number.
// Uses positive infinity if sign >= 0, negative infinity if !sign < 0.
fn Inf(sign: int): cmplx128 {
	ret cmplx(math::Inf(sign), math::Inf(sign))
}