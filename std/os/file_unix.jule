// Copyright 2024-2025 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use "std/internal/poll"
use integ "std/jule/integrated"
use "std/runtime"
use "std/sys"

fn openFile(path: str, mode: int, perm: FileMode)!: &File {
	if path == "" {
		error(FSError.NotExist)
	}
	s := integ::StrToBytes(path)
	handle := unsafe { sys::Open(&s[0], mode|sys::O_CLOEXEC, int(syscallMode(perm))) }
	if handle == -1 {
		error(getLastFsError())
	}
	ret &File{fd: poll::FD.New(u64(handle), poll::FDKind.File)}
}

fn remove(path: str)! {
	s := integ::StrToBytes(path)
	if unsafe { sys::Unlink(&s[0]) } != 0 {
		error(getLastFsError())
	}
}

impl File {
	fn write(mut self, buf: []byte)!: (n: int) {
		n, ok := self.fd.Write(buf)
		if !ok {
			error(getLastFsError())
		}
		ret
	}

	fn read(mut self, mut buf: []byte)!: (n: int) {
		n, ok := self.fd.Read(buf)
		if !ok {
			error(getLastFsError())
		}
		ret
	}
}