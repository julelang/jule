// Copyright 2024-2025 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use "std/internal/os/filepathlite"
use integ "std/jule/integrated"
use "std/sys"

fn readDir(path: str)!: (dirents: []DirEntry) {
	s := integ::StrToBytes(path)
	mut dir := unsafe { sys::Opendir(&s[0]) }
	if dir == nil {
		error(sys::GetLastErrno())
	}
	for {
		dirent := unsafe { sys::Readdir(dir) }
		if dirent == nil {
			break
		}
		name := unsafe { integ::BytePtrToStr((*byte)(&dirent.Name[0])) }
		mut stat := Stat(filepathlite::Join(path, name)) else { error(error) }
		dirents = append(dirents, DirEntry{
			Name: name,
			Stat: stat,
		})
	}
	_ = unsafe { sys::Closedir(dir) }
	ret
}

fn mkdir(path: str)! {
	// NOTICE
	// Also can has EMLINK error-code.
	// Make sure this situation should documented or not.
	ignoringEINTR(fn()! {
		sys::Mkdir(path, 0700) else { error(error) }
	}) else { error(error) }
}

fn rmdir(path: str)! {
	sys::Rmdir(path) else { error(error) }
}