// Copyright 2024-2025 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use "std/sys"

fn open(name: str): (uintptr, ok: bool) {
	f := sys::Open(name, sys::O_RDONLY, 0) else {
		ret 0, false
	}
	ret uintptr(f), true
}

fn read(fd: uintptr, mut buf: []byte): (n: int, ok: bool) {
	if len(buf) == 0 {
		// If the caller wanted a zero byte read, return immediately
		// without trying to read.
		ret 0, true
	}
	n = poll_readFile(fd, buf)
	ok = n != -1
	ret
}

// Derived from std/internal/poll's Read implementation for Windows.
// Stay up to date with the original source code.
fn poll_readFile(fd: uintptr, mut buf: []byte): (n: int) {
	ret sys::ReadFile(sys::Handle(fd), buf) else {
		if error == sys::ERROR_BROKEN_PIPE {
			// Work around ERROR_BROKEN_PIPE is returned on reading EOF from stdin
			ret 0
		}
		ret -1
	}
}

fn preadn(fd: uintptr, mut buf: []byte, off: int): (ok: bool) {
	mut whence := seekStart
	if off < 0 {
		whence = seekEnd
	}
	sys::Seek(sys::Handle(fd), i64(off), whence) else { ret false }
	for len(buf) > 0 {
		m := poll_readFile(fd, buf)
		if m <= 0 {
			ret false
		}
		buf = buf[m:]
	}
	ret true
}

fn closefd(fd: uintptr) {
	sys::CloseHandle(sys::Handle(fd))!
}