// Copyright 2024-2025 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

// Emplaces a type alias declaration to statement which is this function called.
// Defines a type alias with identifier which is alias for t.
// The parameter t can take type declarations or comptimeTypeInfo only.
// fn TypeAlias(name: str, t: T)

// Returns line number of statement which is this function called.
// Returns as constant expression.
// fn Line(): int

// Returns file wrapper of source file which is this function called.
// fn File(): comptimeFile

// Returns file wrappers for source files of package which is this function called.
// fn Files(): comptimeFiles

/* >>> Hint comptimeFiles implementation.

// Private compile-time information wrapper for source files.
// Supports iterable and indexing implementations.
// Using with built-in len function returns count of files as constant expression.
struct comptimeFiles {}

*/

/* >>> Hint comptimeFile implementation.

// Private compile-time file information wrapper.
// Provides interface for source file representation of compiler analysis.
struct comptimeFile {}

impl comptimeFile {
	// Returns path of file as constant expression.
	fn Path(*self): str

	// Returns name of file as constant expression.
	fn Name(*self): str

	// Returns directory of file as constant expression.
	fn Dir(*self): str
}

*/