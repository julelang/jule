// Copyright 2024-2025 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

// Returns compile-time value information.
// Cannot assign to memory, just available in compile-time.
// The expression is evaluated to determine and handle value in compile-time and
// will not executed at runtime.
// fn ValueOf(v: V): comptimeValue

/* >>> Hint comptimeValue implementation.

// Private compile-time value information wrapper.
// Only supports classic expressions.
struct comptimeValue {}

impl comptimeValue {
	// Returns type information for value.
	fn Type(self): comptimeTypeInfo

	// Reports whether value is lvalue as constant expression.
	fn Lvalue(self): bool

	// Reports whether value is mutable as constant expression.
	fn Mutable(self): bool

	// Reports whether value is constant as constant expression.
	fn Const(self): bool

	// Returns comptimeValue for field access expression.
	// Supports only structure types.
	// Parameter name should be constant.
	// It allows access to private fields.
	fn Field(self, name: str): comptimeValue

	// Same as the Field method, but takes constant index instead of name.
	fn FieldByIndex(self, index: int): comptimeValue

	// Returns comptimeValue for method access expression.
	// Supports only structure types.
	// Parameter name should be constant.
	// It allows access to private methods.
	// It will not use the actual kind, so this method an provide
	// access to methods of the any strict type alias.
	fn Method(self, name: str): comptimeValue

	// Unwraps expression for runtime execution.
	fn Unwrap(self)
}

*/