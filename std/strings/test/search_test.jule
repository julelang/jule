// Copyright 2025 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use "std/strings"
use "std/testing"

struct finderNextTest {
	pat:   str
	text:  str
	index: int
}

#test
fn testFinderNext(t: &testing::T) {
	testCases := []finderNextTest([
		{"", "", 0},
		{"", "abc", 0},
		{"abc", "", -1},
		{"abc", "abc", 0},
		{"d", "abcdefg", 3},
		{"nan", "banana", 2},
		{"pan", "anpanman", 2},
		{"nnaaman", "anpanmanam", -1},
		{"abcd", "abc", -1},
		{"abcd", "bcd", -1},
		{"bcd", "abcd", 1},
		{"abc", "acca", -1},
		{"aa", "aaa", 0},
		{"baa", "aaaaa", -1},
		{"at that", "which finally halts.  at that point", 22},
	])

	for _, tc in testCases {
		got := strings::StrFind(tc.pat, tc.text)
		want := tc.index
		if got != want {
			t.Errorf("stringFind({}, {}) got {}, want {}", tc.pat, tc.text, got, want)
		}
	}
}