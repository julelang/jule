// Copyright 2025 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

// Deprecated: Use direct syscalls instead of libc wrappers.

use integ "std/jule/integrated"

cpp use "<signal.h>"
cpp use "<sys/wait.h>"
cpp use "<unistd.h>"

cpp fn fork(): int
cpp fn waitpid(pid: int, mut status: *integ::Int, options: int): int

fn Fork()!: int {
	r := cpp.fork()
	if r < _NO_ERROR {
		error(GetLastErrno())
	}
	ret r
}

fn Waitpid(pid: int, mut &status: i32, options: int)! {
	r := unsafe { cpp.waitpid(pid, (*integ::Int)(&status), options) }
	if r < _NO_ERROR {
		error(GetLastErrno())
	}
}