// Copyright 2023-2025 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

const PATH_MAX = 1024

const O_ACCMODE = 0x3
const O_ALERT = 0x20000000
const O_APPEND = 0x8
const O_ASYNC = 0x40
const O_CLOEXEC = 0x1000000
const O_CREAT = 0x200
const O_DIRECTORY = 0x100000
const O_DP_GETRAWENCRYPTED = 0x1
const O_DSYNC = 0x400000
const O_EVTONLY = 0x8000
const O_EXCL = 0x800
const O_EXLOCK = 0x20
const O_FSYNC = 0x80
const O_NDELAY = 0x4
const O_NOCTTY = 0x20000
const O_NOFOLLOW = 0x100
const O_NONBLOCK = 0x4
const O_POPUP = 0x80000000
const O_RDONLY = 0x0
const O_RDWR = 0x2
const O_SHLOCK = 0x10
const O_SYMLINK = 0x200000
const O_SYNC = 0x80
const O_TRUNC = 0x400
const O_WRONLY = 0x1

const S_IEXEC = 0x40
const S_IFBLK = 0x6000
const S_IFCHR = 0x2000
const S_IFDIR = 0x4000
const S_IFIFO = 0x1000
const S_IFLNK = 0xa000
const S_IFMT = 0xf000
const S_IFREG = 0x8000
const S_IFSOCK = 0xc000
const S_IFWHT = 0xe000
const S_IREAD = 0x100
const S_IRGRP = 0x20
const S_IROTH = 0x4
const S_IRUSR = 0x100
const S_IRWXG = 0x38
const S_IRWXO = 0x7
const S_IRWXU = 0x1c0
const S_ISGID = 0x400
const S_ISTXT = 0x200
const S_ISUID = 0x800
const S_ISVTX = 0x200
const S_IWGRP = 0x10
const S_IWOTH = 0x2
const S_IWRITE = 0x80
const S_IWUSR = 0x80
const S_IXGRP = 0x8
const S_IXOTH = 0x1
const S_IXUSR = 0x40

// See https://github.com/phracker/MacOSX-SDKs/blob/master/MacOSX10.5.sdk/usr/include/sys/fcntl.h
const F_DUPFD = 0           // duplicate file descriptor
const F_GETFD = 1           // get file descriptor flags
const F_SETFD = 2           // set file descriptor flags
const F_GETOWN = 5          // get SIGIO/SIGURG proc/pgrp
const F_SETOWN = 6          // set SIGIO/SIGURG proc/pgrp
const F_GETLK = 7           // get record locking information
const F_SETLK = 8           // set record locking information
const F_SETLKW = 9          // F_SETLK; wait if blocked
const F_CHKCLEAN = 41       // Used for regression test
const F_PREALLOCATE = 42    // Preallocate storage
const F_SETSIZE = 43        // Truncate a file without zeroing space
const F_RDADVISE = 44       // Issue an advisory read async with no copy to user
const F_RDAHEAD = 45        // turn read ahead off/on for this fd
const F_READBOOTSTRAP = 46  // Read bootstrap from disk
const F_WRITEBOOTSTRAP = 47 // Write bootstrap on disk
const F_NOCACHE = 48        // turn data caching off/on for this fd
const F_LOG2PHYS = 49       // file offset to device offset
const F_GETPATH = 50        // return the full path of the fd
const F_FULLFSYNC = 51      // fsync + ask the drive to flush to the media
const F_PATHPKG_CHECK = 52  // find which component (if any) is a package
const F_FREEZE_FS = 53      // "freeze" all fs operations
const F_THAW_FS = 54        // "thaw" all fs operations
const F_GLOBAL_NOCACHE = 55 // turn data caching off/on (globally) for this file