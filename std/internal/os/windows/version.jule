// Copyright 2025 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use "std/mem"
use "std/sys"

// This is true when the OS supports opting into
// proper long path handling without the need for fixups.
let mut CanUseLongPaths = false

// https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_osversioninfow
struct OSVERSIONINFOW {
	osVersionInfoSize: u32
	majorVersion:      u32
	minorVersion:      u32
	buildNumber:       u32
	platformId:        u32
	csdVersion:        [128]u16
}

let mut _RtlGetVersion: uintptr = 0

fn loadWinAPI() {
	ntdll := sys::LoadLibraryEx("ntdll.dll", 0, sys::LOAD_LIBRARY_SEARCH_SYSTEM32)!
	_RtlGetVersion = sys::GetProcAddress(ntdll, "RtlGetVersion")!
}

fn init() {
	loadWinAPI()

	// Check that we're â‰¥ 10.0.15063.
	mut info := OSVERSIONINFOW{}
	info.osVersionInfoSize = u32(mem::SizeOf(info))
	sys::Addrcall(_RtlGetVersion, &info)
	if info.majorVersion < 10 || (info.majorVersion == 10 && info.minorVersion == 0 && info.buildNumber < 15063) {
		ret
	}

	CanUseLongPaths = true
}