// Copyright 2025 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

// Deprecated: Use pure implementation like Assembly for direct syscalls instead of libc wrappers.

cpp use "<errno.h>"

cpp let errno: int

cpp fn syscall(num: uintptr, arg1: uintptr, arg2: uintptr, arg3: uintptr, arg4: uintptr, arg5: uintptr, arg6: uintptr): (r: int)

fn Syscall(num: uintptr, arg1: uintptr, arg2: uintptr, arg3: uintptr, arg4: uintptr, arg5: uintptr, arg6: uintptr): (r: uintptr, err: uintptr) {
	err = NO_ERROR
	r0 := cpp.syscall(num, arg1, arg2, arg3, arg4, arg5, arg6)
	r = uintptr(r0)
	if r0 < 0 {
		err = uintptr(cpp.errno)
	}
	ret
}