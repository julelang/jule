// Copyright 2024-2025 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use "std/internal/conv"
use "std/testing"

struct itoaCase {
	i: int
	s: str
}

let casesItoa: []itoaCase = [
	{-983, "-983"},
	{-873, "-873"},
	{98837792362, "98837792362"},
	{-333444, "-333444"},
	{0, "0"},
]

struct utoaCase {
	i: uint
	s: str
}

let casesUtoa: []utoaCase = [
	{983, "983"},
	{873, "873"},
	{98837792362, "98837792362"},
	{333444, "333444"},
	{0, "0"},
]

#test
fn testItoa(t: &testing::T) {
	for _, case in casesItoa {
		s := conv::Itoa(case.i)
		if s != case.s {
			t.Errorf("expected {} for {}, found {}", case.s, case.i, s)
		}
	}
}

#test
fn testUtoa(t: &testing::T) {
	for _, case in casesUtoa {
		s := conv::Utoa(case.i)
		if s != case.s {
			t.Errorf("expected {} for {}, found {}", case.s, case.i, s)
		}
	}
}