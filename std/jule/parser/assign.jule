// Copyright 2023-2025 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use "std/jule/token"

// Assignment information.
struct assignInfo {
	l:      []&token::Token
	r:      []&token::Token
	setter: &token::Token
	ok:     bool
}

// Checks assignment tokens and whether reports is ok or not.
fn checkAssignTokens(&tokens: []&token::Token): bool {
	if len(tokens) == 0 || !token::IsAssign(tokens[0].Id) {
		ret false
	}
	mut braceN := 0
	for _, t in tokens {
		match t.Id {
		| token::LBRACE
		| token::LBRACK
		| token::LPAREN:
			braceN++
		| token::RBRACE
		| token::RBRACK
		| token::RPAREN:
			braceN--
		}
		match {
		| braceN < 0:
			ret false
		| braceN > 0:
			continue
		| token::IsAssignOp(t.Id)
		| t.Id == token::ARROW
		| t.Id == token::DEFINE:
			ret true
		}
	}
	ret false
}