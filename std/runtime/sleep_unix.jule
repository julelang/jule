// Copyright 2024-2025 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use "std/mem"
use "std/sys"

cpp unsafe fn nanosleep(*cpp.timespec, *cpp.timespec): int

// See documentation of the sleep function.
fn _sleep(dur: sleepDuration) {
	mut sec := dur / _Second
	nsec := dur % _Second // always fits in timespec.tv_nsec

	mut req := sys::Timespec{}
	secBits := mem::SizeOf(req.Sec) * 8
	limit := i64(1)<<(secBits-1) - 1
	for ; sec -= limit {
		if sec <= limit {
			req.Sec = sec
			req.Nsec = nsec
			unsafe { cpp.nanosleep((*cpp.timespec)(&req), nil) }
			break
		} else {
			req.Sec = limit
			unsafe { cpp.nanosleep((*cpp.timespec)(&req), nil) }
		}
	}
}