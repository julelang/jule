// Copyright 2024-2025 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use "std/unsafe"

#disable boundary
fn args(): []str {
	mut args := make([]str, argc)
	for i in args {
		unsafe {
			mut arg := argv[i]
			args[i] = unsafe::Str(arg, strlen(arg))
		}
	}
	ret args
}

fn env(): []str {
	const avgEnvVars = 20
	mut env := make([]str, 0, avgEnvVars)
	mut it := envp
	unsafe {
		for *it != nil; it++ {
			mut p := *it
			env = append(env, unsafe::Str(p, strlen(p)))
		}
	}
	ret env
}

unsafe fn strlen(mut p: *byte): (n: int) {
	for *p != 0; p++ {
		n++
	}
	ret
}