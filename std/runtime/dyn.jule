// Copyright 2025 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

// Runtime implementation of assertion casting for dynamic types.
// Type Dyn is the dynamic type. It may be any or trait.
// Type T is the casting T.
fn dynAssertAssign[Dyn, T](mut val: Dyn, mut &t: *T, mut &ok: *bool) {
	match type val {
	| T:
		if ok != nil {
			*ok = true
		}
		if t != nil {
			*t = val.(T)
		}
	|:
		if ok != nil {
			*ok = false
		}
		if t != nil {
			let mut def: T
			*t = def
		}
	}
}