// Copyright 2025 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

fn testI8() {
	mut s := i8(i8.Max)
	if s+1 != -128 {
		panic("fail")
	}
	if -s != -127 {
		panic("fail")
	}
	if ^s != -128 {
		panic("fail")
	}
	if s<<1 != -2 {
		panic("fail")
	}
	if s<<3 != -8 {
		panic("fail")
	}
	s = i8.Min
	if s-1 != 127 {
		panic("fail")
	}
	if ^s != 127 {
		panic("fail")
	}
	if s<<1 != 0 {
		panic("fail")
	}
}

fn testI16() {
	mut s := i16(i16.Max)
	if s+1 != -32768 {
		panic("fail")
	}
	if -s != -32767 {
		panic("fail")
	}
	if ^s != -32768 {
		panic("fail")
	}
	if s<<1 != -2 {
		panic("fail")
	}
	if s<<10 != -1024 {
		panic("fail")
	}
	s = i16.Min
	if s-1 != 32767 {
		panic("fail")
	}
	if ^s != 32767 {
		panic("fail")
	}
	if s<<1 != 0 {
		panic("fail")
	}
}

fn testI32() {
	mut s := i32(i32.Max)
	if s+1 != -2147483648 {
		panic("fail")
	}
	if -s != -2147483647 {
		panic("fail")
	}
	if ^s != -2147483648 {
		panic("fail")
	}
	if s<<1 != -2 {
		panic("fail")
	}
	if s<<16 != -65536 {
		panic("fail")
	}
	s = i32.Min
	if s-1 != 2147483647 {
		panic("fail")
	}
	if ^s != 2147483647 {
		panic("fail")
	}
	if s<<1 != 0 {
		panic("fail")
	}
}

fn testI64() {
	mut s := i64(i64.Max)
	if s+1 != -9223372036854775808 {
		panic("fail")
	}
	if -s != -9223372036854775807 {
		panic("fail")
	}
	if ^s != -9223372036854775808 {
		panic("fail")
	}
	if s<<1 != -2 {
		panic("fail")
	}
	if s<<50 != -1125899906842624 {
		panic("fail")
	}
	s = i64.Min
	if s-1 != 9223372036854775807 {
		panic("fail")
	}
	if ^s != 9223372036854775807 {
		panic("fail")
	}
	if s<<1 != 0 {
		panic("fail")
	}
}

fn testU8() {
	mut s := u8(u8.Max)
	if s+1 != 0 {
		panic("fail")
	}
	if -s != 1 {
		panic("fail")
	}
	if ^s != 0 {
		panic("fail")
	}
	if s<<1 != 254 {
		panic("fail")
	}
	if s<<3 != 248 {
		panic("fail")
	}
	s = 0
	if s-1 != 255 {
		panic("fail")
	}
	if ^s != 255 {
		panic("fail")
	}
	if s<<1 != 0 {
		panic("fail")
	}
}

fn testU16() {
	mut s := u16(u16.Max)
	if s+1 != 0 {
		panic("fail")
	}
	if -s != 1 {
		panic("fail")
	}
	if ^s != 0 {
		panic("fail")
	}
	if s<<1 != 65534 {
		panic("fail")
	}
	if s<<10 != 64512 {
		panic("fail")
	}
	s = 0
	if s-1 != 65535 {
		panic("fail")
	}
	if ^s != 65535 {
		panic("fail")
	}
	if s<<1 != 0 {
		panic("fail")
	}
}

fn testU32() {
	mut s := u32(u32.Max)
	if s+1 != 0 {
		panic("fail")
	}
	if -s != 1 {
		panic("fail")
	}
	if ^s != 0 {
		panic("fail")
	}
	if s<<1 != 4294967294 {
		panic("fail")
	}
	if s<<10 != 4294966272 {
		panic("fail")
	}
	s = 0
	if s-1 != 4294967295 {
		panic("fail")
	}
	if ^s != 4294967295 {
		panic("fail")
	}
	if s<<1 != 0 {
		panic("fail")
	}
}

fn testU64() {
	mut s := u64(u64.Max)
	if s+1 != 0 {
		panic("fail")
	}
	if -s != 1 {
		panic("fail")
	}
	if ^s != 0 {
		panic("fail")
	}
	if s<<1 != 18446744073709551614 {
		panic("fail")
	}
	if s<<50 != 18445618173802708992 {
		panic("fail")
	}
	s = 0
	if s-1 != 18446744073709551615 {
		panic("fail")
	}
	if ^s != 18446744073709551615 {
		panic("fail")
	}
	if s<<1 != 0 {
		panic("fail")
	}
}

fn main() {
	testI8()
	testI16()
	testI32()
	testI64()
	testU8()
	testU16()
	testU32()
	testU64()
}