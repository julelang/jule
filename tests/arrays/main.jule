// Copyright 2022-2025 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

fn main() {
	let arr0: [5]i32 = [0, 0, 0, 0, 0]
	let arr1: [6]i32 = [9, 16, 32, 64, 128, 256]
	if len(arr0) != 5 {
		panic("len(arr0) != 5")
	}
	if len(arr1) != 6 {
		panic("len(arr1) != 6")
	}
	println(len(arr0))
	println(len((arr1)))

	let x: [10]int = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
	let mut y: [10]int = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
	if x != y {
		panic("x != y")
	}
	y[0] = 0
	if x == y {
		panic("x == y")
	}

	_ = [5]int([1, 2, 3, 4, 5])
	_ = [5]int([1, ...])
	_ = [...]int([1, 2, 3, 4, 5])

	([5]int([1, 2, 3, 4, 5]))[0] = 90
	([1, 2, 3, 4, 5])[0] = 90
}