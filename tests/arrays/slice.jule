// Copyright 2025 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use "std/fmt"

fn init() {
	mut x := make([]int, 0, 10)
	x = append(x, 1, 2, 3, 4, 5)
	if fmt::Format("{}", x) != "[1, 2, 3, 4, 5]" {
		panic("unexpected result")
	}
	mut y := x[:len(x):len(x)]
	if fmt::Format("{}", y) != "[1, 2, 3, 4, 5]" {
		panic("unexpected result")
	}
	y = append(y, 10, 20, 30, 40, 50)
	if fmt::Format("{}", y) != "[1, 2, 3, 4, 5, 10, 20, 30, 40, 50]" {
		panic("unexpected result")
	}
	if fmt::Format("{}", x[:cap(x)]) != "[1, 2, 3, 4, 5, 0, 0, 0, 0, 0]" {
		panic("unexpected result")
	}
	y = x[len(x):len(x):len(x)]
	if fmt::Format("{}", y) != "[]" {
		panic("unexpected result")
	}
	y = append(y, 10, 20, 30, 40, 50)
	if fmt::Format("{}", y) != "[10, 20, 30, 40, 50]" {
		panic("unexpected result")
	}
	if fmt::Format("{}", x[:cap(x)]) != "[1, 2, 3, 4, 5, 0, 0, 0, 0, 0]" {
		panic("unexpected result")
	}
	y = x[:len(x):cap(x)-1]
	if fmt::Format("{}", y) != "[1, 2, 3, 4, 5]" {
		panic("unexpected result")
	}
	y = append(y, 10, 20, 30, 40, 50)
	if fmt::Format("{}", y) != "[1, 2, 3, 4, 5, 10, 20, 30, 40, 50]" {
		panic("unexpected result")
	}
	if fmt::Format("{}", x[:cap(x)]) != "[1, 2, 3, 4, 5, 0, 0, 0, 0, 0]" {
		panic("unexpected result")
	}
	y = x[:len(x):cap(x)]
	if fmt::Format("{}", y) != "[1, 2, 3, 4, 5]" {
		panic("unexpected result")
	}
	y = append(y, 10, 20, 30, 40, 50)
	if fmt::Format("{}", y) != "[1, 2, 3, 4, 5, 10, 20, 30, 40, 50]" {
		panic("unexpected result")
	}
	if fmt::Format("{}", x[:cap(x)]) != "[1, 2, 3, 4, 5, 10, 20, 30, 40, 50]" {
		panic("unexpected result")
	}
}