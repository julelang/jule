// Copyright 2025 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

trait Trait{}

impl Trait for Foo {}

fn init() {
	mut x := any(nil)
	mut y := Trait(nil)
	if x == y {
		panic("should be x != y")
	}
	x = any(Foo(10))
	y = Trait(Foo(10))
	if x == y {
		panic("should be x != y")
	}
	match y {
	| Foo(1):
		panic("wrong case")
	| Foo(10):
		// No-op.
	| Foo(20):
		panic("wrong case")
	|:
		panic("wrong case")
	}
}