// Copyright 2025 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

enum TEnum: type {
	StrictTrait,
}

type Strict: int
type Strict2: TEnum

trait StrictTrait{}

impl StrictTrait for Strict {}
impl StrictTrait for Strict2 {}

fn strict() {
	x := StrictTrait(nil)
	_ = x.(Strict)
	_ = StrictTrait(Strict(10))
	_ = int(x.(Strict))
	_ = x.(Strict2)
	_ = x.(Strict2).(StrictTrait)
	_ = x.(Strict2).(StrictTrait).(Strict2)
}