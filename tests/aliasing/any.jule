// Copyright 2024-2025 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

type Int = int
type StrictInt: Int

fn init() {
	x := any(Int(100))
	y := any(StrictInt(100))
	match type x {
	| Int:
		println("expected")
	| StrictInt:
		panic("should be Int")
	|:
		panic("type detection fail")
	}
	match type y {
	| Int:
		panic("should be StrictInt")
	| StrictInt:
		println("expected")
	|:
		panic("type detection fail")
	}
	if x.(Int) != 100 {
		panic("should be 100")
	}
	if y.(StrictInt) != 100 {
		panic("should be 100")
	}
}