// Copyright 2024-2025 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

fn rangeIteration() {
	c := make(chan int, 4)
	c <- 10
	c <- 20
	c <- 30
	c <- 40
	close(c)
	for x in c {
		println(x)
	}
}

fn unbuffered() {
	c := make(chan int)
	co fn() {
		c <- 20
	}()
	x, ok := <-c
	if !ok {
		panic("invalid receive")
	}
	if x != 20 {
		panic("invalida data")
	}
}

fn sendOnly() {
	c := make(chan<- int, 1)
	c <- 20
}

fn recvOnly() {
	c := fn(): <-chan int {
		c := make(chan int)
		close(c)
		ret c
	}()
	_, ok := <-c
	if ok {
		panic("invalid receive")
	}
}

fn blockingSelect() {
	a := make(chan bool)
	co fn() {
		a <- true
	}()
	select {
	| <-a:
	}
}

fn main() {
	rangeIteration()
	//unbuffered()
	//sendOnly()
	//recvOnly()
	//blockingSelect()
}